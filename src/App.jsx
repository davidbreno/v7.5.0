import Sidebar from './components/Sidebar'
import RectKpiCard from './components/RectKpiCard'
import Equalizer from './components/Equalizer'
import CardSaldo from './components/CardSaldo'
import MultiLineReport from './components/MultiLineReport'
import WeeklyWaterThermo from './components/WeeklyWaterThermo'
import CalendarCard from './components/CalendarCard'
import PayablesModal from './components/PayablesModal'
import { Link } from 'react-router-dom'
import { useDashboard, useTheme, kpiEntradasSaidas, kpiAguaHoje, kpiCicloMeta, kpiPesoMeta, seriesReport, load, alertsStatus, waterWeek } from './data/store'
import { useEffect, useState } from 'react'
export default function App(){ const { saldo } = useDashboard(); const { theme, apply } = useTheme(); useEffect(()=>{ apply(theme) }, [theme]); const [openPay,setOpenPay]=useState(false); const k1=kpiEntradasSaidas(); const k2=kpiCicloMeta(); const k3=kpiAguaHoje(); const kw=kpiPesoMeta(); const serie=seriesReport(); const alerts=alertsStatus(); const waterW=waterWeek(); const d=load(); const pesos=d.saude.peso.slice(-40).map(p=>p.kg); const serieSaldo=(()=>{ const trans=d.financas.transacoes.slice().sort((a,b)=>a.data.localeCompare(b.data)); let acc=0; const out=[]; trans.forEach(t=>{acc+=t.tipo==='entrada'?t.valor:-t.valor; out.push({y:acc})}); return out.slice(-20) })(); const serieCiclo=(()=>{ const semana=['Seg','Ter','Qua','Qui','Sex','Sáb','Dom']; const present=new Set(d.ciclo.itens.map(i=>i.dia)); return semana.map(day=>({y:present.has(day)?100:0})) })(); const serieAgua=waterW.days.map(d=>({y:d.pct})); useEffect(() => { const handler = () => setOpenPay(true); window.addEventListener('openPayablesModal', handler); return () => window.removeEventListener('openPayablesModal', handler); }, []); return (<div className="layout"><Sidebar /><div><header className="topbar"><div className="brand">Projeto David — Dashboard</div><nav className="menu"></nav></header><main className="wrap"><section className="full" style={{display:'grid',gridTemplateColumns:'1fr 1fr',gap:28}}><div className="grid gap-4" style={{ alignItems: 'start', gridTemplateColumns: '1fr 1fr' }}><Link to="/entradas" className="block" style={{ width: 300, height: 135, overflow: 'hidden' }} title={`Entradas: R$ ${k1.ent?.toFixed?.(2)||k1.ent} | Saídas: R$ ${k1.sai?.toFixed?.(2)||k1.sai} | Total: R$ ${k1.tot?.toFixed?.(2)||k1.tot} | % Entradas: ${k1.percent}%`}><RectKpiCard title="Entradas & Saídas" value={k1.percent} suffix="%" percent={k1.percent} data={serieSaldo} /></Link><Link to="/ciclo" className="block" style={{ width: 300, height: 135, overflow: 'hidden', justifySelf: 'end' }} title={`Dias ativos: ${k2.dias} / Meta: ${k2.goal} | ${k2.percent}%`}><RectKpiCard title="Ciclo (dias/sem)" value={k2.percent} suffix="%" percent={k2.percent} data={serieCiclo} alert={alerts.cicloLow} /></Link></div><div className="grid gap-4"><Link to="/agua" className="block" title={`Água hoje: ${k3.litros}L / Meta: ${k3.meta}L | ${k3.percent}%`}><div className="widget thin-outline"><RectKpiCard title="Água" value={k3.percent} suffix="%" percent={k3.percent} data={serieAgua} alert={alerts.aguaLow} subtitle={`${k3.litros}/${k3.meta} L`} /><WeeklyWaterThermo items={waterW.days} meta={waterW.meta} /></div></Link><div className="widget"><CalendarCard /></div></div></section><section className="full"><Link to="/peso" className="widget widget-click thin-outline block" title={`Peso: início ${kw.inicio}kg → atual ${kw.atual}kg → alvo ${kw.alvo}kg | modo: ${kw.mode} | progresso: ${kw.percent}%`}><div style={{display:'grid',gridTemplateColumns:'180px 1fr',gap:16,alignItems:'center'}}><div><RectKpiCard title="Peso (progresso)" value={kw.percent} suffix="%" percent={kw.percent} data={pesos.map((v)=>({y:v}))} subtitle={`${kw.atual}kg → ${kw.alvo}kg`} /></div><div><Equalizer values={pesos} /></div></div></Link></section><section className="full"><div className="widget"><MultiLineReport data={serie} /></div></section><PayablesModal open={openPay} onClose={()=>setOpenPay(false)} /></main></div></div>) }